trigger:
- master
- dev

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
    mac:
      imageName: 'macOS-10.14'

pool:
  vmImage: $(imageName)

variables:
  GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle

steps:
- script: sudo apt-get -y install bison flex
  displayName: 'Install bison and flex (Linux)'
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

- task: CacheBeta@0
  displayName: Gradle build cache
  inputs:
    key: '$(Agent.OS)-gradle-home'
    path: $(GRADLE_USER_HOME)

- script: brew install bison flex && brew link bison --force && brew link flex --force
  displayName: 'Install bison and flex (Mac)'
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Darwin'))

- task: CacheBeta@0
  displayName: Gradle flat repo cache
  inputs:
    key: '$(Agent.OS)-flatRepo'
    path: $(Build.SourcesDirectory)/flatRepo
    cacheHitVar: CACHE_RESTORED

- script: gradle --init-script gradle/support/fetchDependencies.gradle init
  displayName: 'Init flat directory-style repository'
  condition: ne(variables.CACHE_RESTORED, 'true')

- script: gradle wrapper
  displayName: 'Create wrapper task'

- task: Gradle@2
  displayName: 'gradlew buildGhidra'
  inputs:
    workingDirectory: ''
    options: '--build-cache'
    tasks: buildGhidra
    jdkVersionOption: 1.11
    gradleOptions: '-Djava.awt.headless=true'

- task: Gradle@2
  displayName: 'gradlew unitTestReport'
  inputs:
    workingDirectory: ''
    options: '--build-cache'
    tasks: unitTestReport
    jdkVersionOption: 1.11
    gradleOptions: '-Djava.awt.headless=true'
  condition: and(succeeded(), ne(variables['Agent.OS'], 'Darwin'))

- task: Gradle@2
  displayName: 'gradlew integrationTestReport'
  inputs:
    workingDirectory: ''
    options: '--build-cache'
    tasks: integrationTestReport
    jdkVersionOption: 1.11
    gradleOptions: '-Djava.awt.headless=true'
  condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false), notIn(variables['Build.Reason'], 'PullRequest', 'CheckInShelveset'), ne(variables['Agent.OS'], 'Darwin'))

- task: Gradle@2
  displayName: 'gradlew --stop'
  inputs:
    workingDirectory: ''
    options: '--stop'
    jdkVersionOption: 1.11

- task: CopyFiles@2
  inputs:
    sourceFolder: 'build/dist'
    targetFolder: '$(build.artifactstagingdirectory)'
  condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false), notIn(variables['Build.Reason'], 'PullRequest', 'CheckInShelveset'))

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    artifactName: artifacts
    artifactType: Container
  condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false), notIn(variables['Build.Reason'], 'PullRequest', 'CheckInShelveset'))
