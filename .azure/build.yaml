trigger:
- master
- dev

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
    mac:
      imageName: 'macOS-10.14'

pool:
  vmImage: $(imageName)

steps:
- script: sudo apt-get -y install bison flex
  displayName: 'Install bison and flex (Linux)'
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

- script: brew install bison flex && brew link bison --force && brew link flex --force
  displayName: 'Install bison and flex (Mac)'
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Darwin'))

- script: gradle --init-script gradle/support/fetchDependencies.gradle init
  displayName: 'Init flat directory-style repository'

- script: gradle wrapper
  displayName: 'Create wrapper task'

- task: Gradle@2
  displayName: 'gradlew buildGhidra'
  inputs:
    #gradleWrapperFile: 'gradlew'
    workingDirectory: ''
    tasks: buildGhidra
    jdkVersionOption: 1.11

- task: CopyFiles@2
  inputs:
    sourceFolder: 'build/dist'
    targetFolder: '$(build.artifactstagingdirectory)'
  condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false), notIn(variables['Build.Reason'], 'PullRequest', 'CheckInShelveset'))

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    artifactName: artifacts
    artifactType: Container
  condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false), notIn(variables['Build.Reason'], 'PullRequest', 'CheckInShelveset'))
