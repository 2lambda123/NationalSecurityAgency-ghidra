/* ###
 * IP: GHIDRA
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply from: "${rootProject.projectDir}/gradle/javaProject.gradle"
apply from: "${rootProject.projectDir}/gradle/jacocoProject.gradle"
apply from: "${rootProject.projectDir}/gradle/javaTestProject.gradle"
apply from: "${rootProject.projectDir}/gradle/distributableGhidraModule.gradle"

apply plugin: 'eclipse'
eclipse.project.name = 'Debug Framework-AsyncComm'

dependencies {
	api 'com.google.protobuf:protobuf-java:3.21.8'
	api project(':Generic')
	api project(':Graph')
	api project(':ProposedUtils')
}

task genTestPy(type: JavaExec) {
	ext.outDir = "build/testpy"
	outputs.dir(outDir)
	classpath(sourceSets["main"].runtimeClasspath)
	classpath(sourceSets["test"].runtimeClasspath)
	mainClass = "ghidra.comm.util.pyexport.GeneratePython"
	args("ghidra.comm.tests.packet", outDir)
	doLast {
		println("NOTE: It is normal to see some export errors, since some classes are intentionally broken to test error detection")
	}
}

task combineTestPySources(type: Copy) {
	from(genTestPy)
	from("src/main/py")
	from("src/test/py")
	into("build/fulltestpy")
}

// NOTE: This is defunct, and I don't care
task pyTest(type: Exec) {
	inputs.files(combineTestPySources)

	commandLine("python")
	workingDir(inputs.files.singleFile)
	args("-m", "ghidra.comm.test_packet")
}
