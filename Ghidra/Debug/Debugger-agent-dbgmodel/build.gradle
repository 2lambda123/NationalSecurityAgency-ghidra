/* ###
 * IP: GHIDRA
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply from: "$rootProject.projectDir/gradle/javaProject.gradle"
apply from: "$rootProject.projectDir/gradle/jacocoProject.gradle"
apply from: "$rootProject.projectDir/gradle/javaTestProject.gradle"
apply from: "$rootProject.projectDir/gradle/nativeProject.gradle"
apply from: "$rootProject.projectDir/gradle/distributableGhidraModule.gradle"

apply from: "$rootProject.projectDir/gradle/debugger/hasNodepJar.gradle"

apply plugin: 'eclipse'
eclipse.project.name = 'Debug Debugger-agent-dbgmodel'

dependencies {
	api project(":Debugger-agent-dbgeng")

	testImplementation project(path: ":Debugger-agent-dbgeng", configuration: 'testArtifacts')
	testImplementation project(path: ':Framework-AsyncComm', configuration: 'testArtifacts')
	testImplementation project(path: ':Framework-Debugging', configuration: 'testArtifacts')
	testImplementation project(path: ":Debugger-gadp", configuration: 'testArtifacts')
}

tasks.nodepJar {
	manifest {
		attributes['Main-Class'] = 'agent.dbgmodel.gadp.DbgModelGadpServer'
	}
}

test {
	jvmArgs('-Xrs') // TODO: Is this needed, or left over from trial-and-error
	if ("win_x86_64".equals(getCurrentPlatformName())) {
		dependsOn(":Framework-Debugging:testSpecimenWin_x86_64")
	}
}
